plugins {
    id("java")
    id "org.jetbrains.intellij" version "1.17.3" // 或更新版本
    id("maven-publish")
    id 'com.github.johnrengelman.shadow' version '7.1.2' // 影子jar插件
}

group = "tech.shiker"
version = "1.0.1"

repositories {
    mavenCentral()
}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
    version = '2023.3'
// 	插件依赖去点
//    plugins.set(listOf(/* Plugin Dependencies */))
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.vladsch.flexmark:flexmark-all:0.64.0'
}


//新增java编译配置
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation', '-parameters']
}

// 添加一个任务用于输出当前版本号
tasks.register("printVersion") {
    doLast {
        println project.version
    }
}

// 配置shadowJar任务，生成fat jar
shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set('all')  // 生成形如 xxx-all.jar
    archiveVersion.set(project.version)
    mergeServiceFiles() // 合并META-INF/services文件（有需要时）
}

// 让构建插件任务使用shadowJar产物
tasks.buildPlugin {
    dependsOn(shadowJar)
    from(shadowJar.archiveFile) {
        into("/")
    }
}

patchPluginXml {
    //注意这个版本号不能高于上面intellij的version,否则runIde会报错
    changeNotes = "橙序员小站第一版发布"
    sinceBuild = '231'
    untilBuild = '243.*'
}



publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/shiker1996/orange-tech")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
